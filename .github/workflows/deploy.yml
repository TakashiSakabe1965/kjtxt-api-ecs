name: Deploy to ECS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::854878589422:role/aisin-subroutine-ecs-role
        aws-region: ap-northeast-1
        audience: sts.amazonaws.com

    - name: Build Docker image
      run: |
        docker build -t kjtxt-api:latest .

    - name: Tag Docker image for ECR
      run: |
        docker tag kjtxt-api:latest 854878589422.dkr.ecr.ap-northeast-1.amazonaws.com/kjtxt-api:latest

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-northeast-1 | \
        docker login --username AWS --password-stdin 854878589422.dkr.ecr.ap-northeast-1.amazonaws.com
    - name: Push Docker image to ECR
      run: |
        docker push 854878589422.dkr.ecr.ap-northeast-1.amazonaws.com/kjtxt-api:latest

    - name: 📦 Deploy CloudFormation stack
      run: |
        echo "📦 Deploying CloudFormation stack..."
        aws cloudformation deploy \
          --template-file infra/deploy-cfn.yml \
          --stack-name kjtxt-ecs-stack-v2 \
          --capabilities CAPABILITY_NAMED_IAM \
          --region ap-northeast-1 \
          --no-fail-on-empty-changeset \
          --parameter-overrides \
            VpcId=vpc-00a864232967b482e \
            Subnet1=subnet-08575605bc6e74371 \
            Subnet2=subnet-0bd83c19cd2d031f4 \
            ALBSecurityGroupId=sg-07c55a885728e21e8 \
            ECSSecurityGroupId=sg-0f0f53729b7673f03
    - name: ⏳ Wait for CloudFormation stack to complete
      run: |
        echo "⏳ Waiting for CloudFormation stack to complete..."
        aws cloudformation wait stack-create-complete \
          --stack-name kjtxt-ecs-stack-v2 \
          --region ap-northeast-1

    - name: 🔍 Get ECS Cluster Name from CloudFormation Outputs
      id: get_cluster
      run: |
        CLUSTER_NAME=$(aws cloudformation describe-stacks \
          --stack-name kjtxt-ecs-stack-v2 \
          --region ap-northeast-1 \
          --query "Stacks[0].Outputs[?OutputKey=='ECSClusterName'].OutputValue" \
          --output text)
        echo "cluster-name=$CLUSTER_NAME" >> $GITHUB_OUTPUT

    - name: 🔧 Register new task definition with updated image
      id: register_task
      run: |
        echo "🔧 Registering new task definition..."
        TASK_DEF=$(aws ecs describe-task-definition \
          --task-definition kjtxt-task \
          --region ap-northeast-1)

        NEW_TASK_DEF=$(echo "$TASK_DEF" | jq --arg IMAGE "854878589422.dkr.ecr.ap-northeast-1.amazonaws.com/kjtxt-api:latest" '
          .taskDefinition |
          del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy) |
          .containerDefinitions[0].image = $IMAGE')

        echo "$NEW_TASK_DEF" > new-task-def.json

        aws ecs register-task-definition \
          --cli-input-json file://new-task-def.json \
          --region ap-northeast-1
    - name: 🚀 Deploy to ECS with new task definition
      run: |
        echo "🚀 Updating ECS service with new task definition..."
        aws ecs update-service \
          --cluster ${{ steps.get_cluster.outputs.cluster-name }} \
          --service kjtxt-service \
          --task-definition kjtxt-task \
          --force-new-deployment \
          --region ap-northeast-1
