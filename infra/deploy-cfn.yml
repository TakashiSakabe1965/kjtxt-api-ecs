
AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Fargate Stack with ALB, IAM, and ECS Resources (VPC/Subnet/SG are external)

Parameters:
  VpcId:
    Type: String
    Description: Existing VPC ID

  Subnet1:
    Type: String
    Description: Public Subnet 1 ID

  Subnet2:
    Type: String
    Description: Public Subnet 2 ID

  ALBSecurityGroupId:
    Type: String
    Description: Security Group ID for ALB

  ECSSecurityGroupId:
    Type: String
    Description: Security Group ID for ECS tasks
Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/kjtxt-api
      RetentionInDays: 14

  ECSCluster:
    Type: AWS::ECS::Cluster

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: kjtxt-task
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: kjtxt-api
          Image: 854878589422.dkr.ecr.ap-northeast-1.amazonaws.com/kjtxt-api:latest
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/kjtxt-api
              awslogs-region: ap-northeast-1
              awslogs-stream-prefix: ecs

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      HealthCheckPath: /health
      HealthCheckPort: traffic-port

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Ref: Subnet1
        - Ref: Subnet2
      SecurityGroups:
        - Ref: ALBSecurityGroupId
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  ECSService:
    Type: AWS::ECS::Service
    DependsOn:
      - Listener
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: kjtxt-service
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Ref: Subnet1
            - Ref: Subnet2
          SecurityGroups:
            - Ref: ECSSecurityGroupId
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerName: kjtxt-api
          ContainerPort: 8080
Outputs:
  LoadBalancerDNS:
    Description: DNS name of the ALB
    Value: !GetAtt LoadBalancer.DNSName

  ECSClusterName:
    Description: ECS Cluster Name
    Value: !Ref ECSCluster
